plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'idea'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
	implementation 'org.springframework.boot:spring-boot-starter-logging:3.1.0'

	// https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	//## QueryDSL
	implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.10.1'
	annotationProcessor 'io.github.openfeign.querydsl:querydsl-apt:6.10.1:jpa'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

//QClass 파일 인식 불가시, src/main/generated 디렉토리를 IDEA 에서, mark as generated source root 로 설정할 것
def generatedDir = file("$projectDir/src/main/generated")

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = generatedDir
}

sourceSets {
	main {
		java.srcDirs += generatedDir
	}
}

tasks.named('clean') {
	delete -= generatedDir
}

tasks.register('setupGeneratedDir') {
	group = 'hidden'
	doLast {
		if (!generatedDir.exists()) {
			generatedDir.mkdirs()
		}
		sourceSets.main.java.srcDirs += generatedDir
	}
}

idea {
	module {
		generatedSourceDirs += generatedDir
	}
}

tasks.named("compileJava") {
	dependsOn("setupGeneratedDir")
}

tasks.named('test') {
	useJUnitPlatform()
}
